*** Chapter 7 Notes ***
    >> Using The D3 Community
        > Helping you to find pre-written boilerplate code online
        > Setting ourselves up for the next 3 sections of the course
        > YOU SHOULDN'T NEED TO FIGURE OUT HOW TO DO SOMETHING IF IT'S ALREADY BEEN DONE BEFORE
        > bl.ocks.org and blockbuilder.org are the 2 main websites for D3.js boilerplates.

    >> Migrating Code To Version 5.x
        > The changes between D3 version 4 and version 5
        > What you need to do to migrate existing code to the latest version

    >> New In Version 5
        > Data loading as promises
        > Deprecation of d3.queue( )
        > Removal of d3.schemeCategory20
        > Addition of the d3-scale-chromatic module

    >> D3 Layouts
        > Intro to the layout structure that existed in D3 V3
        > Show some examples how this behavior still exists in V4
        > Helping to understand how many visualizations are created
    >> Intro To Layouts
        > Take in data, and add new fields to each item in our data array
        > Use these fields to draw our visualizations (ex: pass some generated values straight into SVG attributes)
    >> Some V3 to V4 syntax changes:
        > d3.layout.pie() --> d3.pie()
        > d3.layout.force() --> d3.force()
        > d3.layout.stack() --> d3.stack()
        > d3.layout.treemap() --> d3.treemap()
        > d3.layout.cloud() --> d3.layout.cloud()
        > d3.scale.time( ) --> d3.scaleTime( )
        > d3.scale.linear( ) --> d3.scaleLinear( )
        > d3.scale.log( ) --> d3.scaleLog( )
        > d3.scale.category20( ) --> d3.scaleOrdinal( d3.schemeCategory20 )
        > d3.layout.pie( ) --> d3.pie( )


    >> Area Charts
        > Intro to area charts in D3
        > Walking through some community code as an example implementation
        > Using the D3 area path generator
    >> Stacked Area Charts
        > Intro to stacked area charts in D3
        > Walking through 2 different example files
        > Explaining any new code
        > Using d3.stack( ) layout to work out the right y0 and y1 values to use
    >> Data Structures & D3 Nests
        > Talking about how to work with different data structures
        > Data as an array VS. data as an object
        > Introducing D3 nests for grouping arrays of data
    >> Data Structures in JavaScript
        > Each of our layout functions need our data to be in the right format
        > How do we coerce the data we have to work with out layout?
        > What is the right data structure for us to choose for our data files?
    >> Pie & Donut Charts
        > Intro to Pie & Donut charts in D3 with 2 examples
        > Understanding how the D3 pie layout is working
        > Using the D3 arc path generator
        > AttrTween for setting custom attribute transitions
    >> Wordclouds
        > Intro to wordclouds in D3 for visualization blocks of text
        > Using the plug-in wordcloud layout with D3 version 4
        > Walking through and understanding a piece of community code
